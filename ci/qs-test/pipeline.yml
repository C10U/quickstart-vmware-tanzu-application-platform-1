resource_types:
- name: slack-alert
  type: registry-image
  source:
    repository: ((dockerhub-proxy))/arbourd/concourse-slack-alert-resource

resources:
- name: repo
  type: git
  check_every: 1m
  icon: github
  source:
    uri: ((repo.url))
    branch: ((repo.branch))
    ignore_paths:
    - ci/
- name: ci-repo
  type: git
  check_every: 1m
  icon: github
  source:
    uri: ((repo.url))
    branch: ((repo.branch))
    paths:
    - ci/qs-test/
    - ci/tasks/
- name: houekeeping-time
  icon: wrench-clock
  type: time
  source:
    location: UTC
    start: 07:00 AM
    stop: 09:00 AM
    days: [ Monday, Tuesday, Wednesday, Thursday, Friday ]
    initial_version: true
- name: notify
  icon: slack
  type: slack-alert
  source:
    url: ((ci/slack.webhook))

alerting:
  onJobs: &alertingOnJobs
    on_failure:
      put: notify
      params: { alert_type: failed }
    on_error:
      put: notify
      params: { alert_type: errored }

jobs:
- name: set-pipeline
  << : *alertingOnJobs
  plan:
  - get: ci-repo
    params:
      submodules: none
    trigger: true
  - set_pipeline: self
    file: ci-repo/ci/qs-test/pipeline.yml
    var_files:
    - ci-repo/ci/qs-test/pipeline.vars.yml

- name: prepare-bucket
  << : *alertingOnJobs
  serial: true
  plan:
  - in_parallel:
    - get: ci-repo
      params:
        submodules: none
      trigger: true
      passed: [ set-pipeline ]
    - get: repo
      trigger: true
  - &setup
    in_parallel:
    - &getCloudGateCreds
      task: get-cloudgate-creds
      file: ci-repo/ci/tasks/get-cloudgate-creds/task.yml
      params:
        CLOUDGATE_BASE_URL: https://api.console.cloudgate.vmware.com
        CLOUDGATE_CLIENT_ID: ((ci/cloudgate.clientId))
        CLOUDGATE_CLIENT_SECRET: ((ci/cloudgate.clientSecret))
        CLOUDGATE_MASTER_ACCOUNT_ID: ((ci/cloudgate.masterAccountId))
        CLOUDGATE_ORG_ACCOUNT_ID: ((ci/cloudgate.orgAccountId))
        CLOUDGATE_OU_ID: ((ci/cloudgate.ouId))
        CLOUDGATE_TTL: 43200
    - task: generate-taskcat-config
      file: ci-repo/ci/tasks/taskcat-generate-config/task.yml
      params:
        VAR_tanzunet_username: ((ci/tanzunet.username))
        VAR_tanzunet_password: ((ci/tanzunet.password))
        VAR_tanzunet_refreshToken: ((ci/tanzunet.refreshToken))
        VAR_keypairName: ((ci/qs-test/keypair.name))
        VAR_bucket: tcat-9d0156f41d3b503b8360120b8214b6f1
        VAR_domain: thingamaji.ga

  - task: taskcat-prepare-bucket
    file: ci-repo/ci/tasks/taskcat-build-upload/task.yml
    params:
      NIMBUS_USER: ((ci/nimbus.user))
      NIMBUS_DEPLOY_OPTS: '--cpus=6 --memory=4096'
      DOCKER_HUB_PROXY: ((dockerhub-proxy))

- name: test-single
  << : *alertingOnJobs
  serial: true
  plan:
  - in_parallel:
    - get: ci-repo
      params:
        submodules: none
      trigger: true
      passed: [ prepare-bucket ]
    - get: repo
      params:
        submodules: none
      trigger: true
      passed: [ prepare-bucket ]
  - *setup
  - task: taskcat-test
    file: ci-repo/ci/tasks/taskcat-run-test/task.yml
    params:
      TEST_NAME: single
    ensure: &postTest
      in_parallel:
      - task: print-logs
        file: ci-repo/ci/tasks/taskcat-print-logs/task.yml
      - task: cleanup-stack
        file: ci-repo/ci/tasks/aws-delete-stack/task.yml

- name: test-multi
  << : *alertingOnJobs
  serial: true
  plan:
  - in_parallel:
    - get: ci-repo
      params:
        submodules: none
      trigger: true
      passed: [ prepare-bucket ]
    - get: repo
      params:
        submodules: none
      trigger: true
      passed: [ prepare-bucket ]
  - *setup
  - task: taskcat-test
    file: ci-repo/ci/tasks/taskcat-run-test/task.yml
    params:
      TEST_NAME: multi
    ensure: *postTest

- name: housekeeping
  << : *alertingOnJobs
  plan:
  - in_parallel:
    - get: houekeeping-time
      trigger: true
    - get: ci-repo
      params:
        submodules: none
  - *getCloudGateCreds
  - task: print-failed-stacks
    file: ci-repo/ci/tasks/aws-housekeeping/stacks.yml
