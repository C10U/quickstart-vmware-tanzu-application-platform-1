AWSTemplateFormatVersion: 2010-09-09
Description: >-
  AWS CloudFormation template
Parameters:
  EKSClusterName:
    Description: Name of the EKS cluster where TAP will be deployed.
    Type: String
    Default: tap
  BUILDEKSQSStackOutputsOIDCIssuerURL:
    Type: String
    Description: >-
      BUILDEKSQSStackOutputsOIDCIssuerURL
    Default: 'https://oidc.eks.us-west-2.amazonaws.com/id/600A2C959E51C7CC31B07BA6C7D1B8B8'
  VIEWEKSQSStackOutputsOIDCIssuerURL:
    Type: String
    Description: >-
      BUILDEKSQSStackOutputsOIDCIssuerURL
    Default: 'https://oidc.eks.us-west-2.amazonaws.com/id/7AD3FAD3374F78F67A8514D280D9B6FB'
  RUNEKSQSStackOutputsOIDCIssuerURL:
    Type: String
    Description: >-
      BUILDEKSQSStackOutputsOIDCIssuerURL
    Default: 'https://oidc.eks.us-west-2.amazonaws.com/id/15A4D46D8F21AC9B54C103AB4169F159'
  ITERATEEKSQSStackOutputsOIDCIssuerURL:
    Type: String
    Description: >-
      BUILDEKSQSStackOutputsOIDCIssuerURL
    Default: 'https://oidc.eks.us-west-2.amazonaws.com/id/B2039A63B4DC552D48B648CFD3BB33BB'
  TAPClusterArch:
    Type: String
    Description: >-
      TAP Cluster Architecture
    AllowedValues:
      - 'Multi'
      - 'Single'
    Default: 'Single'
Conditions:
  CreateMultiCluster: !Equals [!Ref TAPClusterArch, 'Multi']
  CreateSingleCluster: !Equals [!Ref TAPClusterArch, 'Single']
Resources:
  BUILDEKSEBSCSIDriverRole:
    Type: AWS::IAM::Role
    Condition: CreateMultiCluster
    Properties:
      RoleName: !Sub
        - BUILDEKSEBSCSIDriverRole-${StackId}
        - StackId: !Select [2, !Split [/, !Ref AWS::StackId]]
      Description: >-
        VMware Tanzu Application Platform role for EBSSCI Driver.
      AssumeRolePolicyDocument: !Sub
        - |
          {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Principal": {
                  "Federated": "${IamOidcProviderArn}/${OidcProviderEndpoint}"
                },
                "Action": "sts:AssumeRoleWithWebIdentity",
                "Condition": {
                  "StringEquals": {
                    "${OidcProviderEndpoint}:aud": "sts.amazonaws.com",
                    "${OidcProviderEndpoint}:sub": "system:serviceaccount:kube-system:ebs-csi-controller-sa"
                  }
                }
              }
            ]
          }
        - IamOidcProviderArn: !Sub arn:aws:iam::${AWS::AccountId}:oidc-provider
          OidcProviderEndpoint: !Select [1, !Split [//, !Ref BUILDEKSQSStackOutputsOIDCIssuerURL]]
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEBSCSIDriverPolicy
  RUNEKSEBSCSIDriverRole:
    Type: AWS::IAM::Role
    Condition: CreateMultiCluster
    Properties:
      RoleName: !Sub
        - RUNEKSEBSCSIDriverRole-${StackId}
        - StackId: !Select [2, !Split [/, !Ref AWS::StackId]]
      Description: >-
        VMware Tanzu Application Platform role for EBSSCI Driver.
      AssumeRolePolicyDocument: !Sub
        - |
          {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Principal": {
                  "Federated": "${IamOidcProviderArn}/${OidcProviderEndpoint}"
                },
                "Action": "sts:AssumeRoleWithWebIdentity",
                "Condition": {
                  "StringEquals": {
                    "${OidcProviderEndpoint}:aud": "sts.amazonaws.com",
                    "${OidcProviderEndpoint}:sub": "system:serviceaccount:kube-system:ebs-csi-controller-sa"
                  }
                }
              }
            ]
          }
        - IamOidcProviderArn: !Sub arn:aws:iam::${AWS::AccountId}:oidc-provider
          OidcProviderEndpoint: !Select [1, !Split [//, !Ref RUNEKSQSStackOutputsOIDCIssuerURL]]
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEBSCSIDriverPolicy
  VIEWEKSEBSCSIDriverRole:
    Type: AWS::IAM::Role
    Condition: CreateMultiCluster
    Properties:
      RoleName: !Sub
        - VIEWEKSEBSCSIDriverRole-${StackId}
        - StackId: !Select [2, !Split [/, !Ref AWS::StackId]]
      Description: >-
        VMware Tanzu Application Platform role for EBSSCI Driver.
      AssumeRolePolicyDocument: !Sub
        - |
          {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Principal": {
                  "Federated": "${IamOidcProviderArn}/${OidcProviderEndpoint}"
                },
                "Action": "sts:AssumeRoleWithWebIdentity",
                "Condition": {
                  "StringEquals": {
                    "${OidcProviderEndpoint}:aud": "sts.amazonaws.com",
                    "${OidcProviderEndpoint}:sub": "system:serviceaccount:kube-system:ebs-csi-controller-sa"
                  }
                }
              }
            ]
          }
        - IamOidcProviderArn: !Sub arn:aws:iam::${AWS::AccountId}:oidc-provider
          OidcProviderEndpoint: !Select [1, !Split [//, !Ref VIEWEKSQSStackOutputsOIDCIssuerURL]]
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEBSCSIDriverPolicy
  ITERATEEKSEBSCSIDriverRole:
    Type: AWS::IAM::Role
    Condition: CreateMultiCluster
    Properties:
      RoleName: !Sub
        - ITERATEEKSEBSCSIDriverRole-${StackId}
        - StackId: !Select [2, !Split [/, !Ref AWS::StackId]]
      Description: >-
        VMware Tanzu Application Platform role for EBSSCI Driver.
      AssumeRolePolicyDocument: !Sub
        - |
          {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Principal": {
                  "Federated": "${IamOidcProviderArn}/${OidcProviderEndpoint}"
                },
                "Action": "sts:AssumeRoleWithWebIdentity",
                "Condition": {
                  "StringEquals": {
                    "${OidcProviderEndpoint}:aud": "sts.amazonaws.com",
                    "${OidcProviderEndpoint}:sub": "system:serviceaccount:kube-system:ebs-csi-controller-sa"
                  }
                }
              }
            ]
          }
        - IamOidcProviderArn: !Sub arn:aws:iam::${AWS::AccountId}:oidc-provider
          OidcProviderEndpoint: !Select [1, !Split [//, !Ref ITERATEEKSQSStackOutputsOIDCIssuerURL]]
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEBSCSIDriverPolicy
  SINGLEEKSEBSCSIDriverRole:
    Type: AWS::IAM::Role
    Condition: CreateSingleCluster
    Properties:
      RoleName: !Sub
        - SINGLEEKSEBSCSIDriverRole-${StackId}
        - StackId: !Select [2, !Split [/, !Ref AWS::StackId]]
      Description: >-
        VMware Tanzu Application Platform role for EBSSCI Driver.
      AssumeRolePolicyDocument: !Sub
        - |
          {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Principal": {
                  "Federated": "${IamOidcProviderArn}/${OidcProviderEndpoint}"
                },
                "Action": "sts:AssumeRoleWithWebIdentity",
                "Condition": {
                  "StringEquals": {
                    "${OidcProviderEndpoint}:aud": "sts.amazonaws.com",
                    "${OidcProviderEndpoint}:sub": "system:serviceaccount:kube-system:ebs-csi-controller-sa"
                  }
                }
              }
            ]
          }
        - IamOidcProviderArn: !Sub arn:aws:iam::${AWS::AccountId}:oidc-provider
          OidcProviderEndpoint: !Select [1, !Split [//, !Ref SINGLEEKSQSStackOutputsOIDCIssuerURL]]
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEBSCSIDriverPolicy
  BUILDEBSSCIAddon:
    Type: AWS::EKS::Addon
    Condition: CreateMultiCluster
    Properties:
      AddonName: aws-ebs-csi-driver
      ClusterName: !Join ['', [!Ref EKSClusterName, "-build" ]]
      ResolveConflicts: NONE
      ServiceAccountRoleArn: !GetAtt BUILDEKSEBSCSIDriverRole.Arn
  RUNEBSSCIAddon:
    Type: AWS::EKS::Addon
    Condition: CreateMultiCluster
    Properties:
      AddonName: aws-ebs-csi-driver
      ClusterName: !Join ['', [!Ref EKSClusterName, "-run" ]]
      ResolveConflicts: NONE
      ServiceAccountRoleArn: !GetAtt RUNEKSEBSCSIDriverRole.Arn
  VIEWEBSSCIAddon:
    Type: AWS::EKS::Addon
    Condition: CreateMultiCluster
    Properties:
      AddonName: aws-ebs-csi-driver
      ClusterName: !Join ['', [!Ref EKSClusterName, "-view" ]]
      ResolveConflicts: NONE
      ServiceAccountRoleArn: !GetAtt VIEWEKSEBSCSIDriverRole.Arn
  ITERATEEBSSCIAddon:
    Type: AWS::EKS::Addon
    Condition: CreateMultiCluster
    Properties:
      AddonName: aws-ebs-csi-driver
      ClusterName: !Join ['', [!Ref EKSClusterName, "-iterate" ]]
      ResolveConflicts: NONE
      ServiceAccountRoleArn: !GetAtt ITERATEEKSEBSCSIDriverRole.Arn
  SINGLEEBSSCIAddon:
    Type: AWS::EKS::Addon
    Condition: CreateSingleCluster
    Properties:
      AddonName: aws-ebs-csi-driver
      ClusterName: !Ref EKSClusterName
      ResolveConflicts: NONE
      ServiceAccountRoleArn: !GetAtt SINGLEEKSEBSCSIDriverRole.Arn
