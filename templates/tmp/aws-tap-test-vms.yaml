AWSTemplateFormatVersion: 2010-09-09
Description: >-
  AWS CloudFormation template
Parameters:
  # KeyPairName:
  #   Type: AWS::EC2::KeyPair::KeyName
  #   Description: >-
  #     KeyPairName
  #   Default: 'satya-keypair-us-west-2'
  PublicSubnet1Id:
    Type: AWS::EC2::Subnet::Id
    Description: >-
      ID of the public subnet in Availability Zone 1 of your existing VPC
      (example: subnet-a0246dcd).
    # Default: subnet-035494469cc076aab
    Default: subnet-044a446ded7d8a655
  WindowsBastionSecurityGroup:
    Type: AWS::EC2::SecurityGroup::Id
    Description: >-
      WindowsBastionSecurityGroup
    Default: sg-0b2ab83cdf168a3b7
  LinuxBastionSecurityGroup:
    Type: AWS::EC2::SecurityGroup::Id
    Description: >-
      LinuxBastionSecurityGroup
    Default: sg-06cfef08e91bcebe0
Resources:
  KeyPairName:
    Type: 'AWS::EC2::KeyPair'
    Properties:
      KeyName: !Sub
        - KeyPairName-${StackId}
        - StackId: !Select [2, !Split [/, !Ref AWS::StackId]]
  WindowsBastion:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t3.medium
      ImageId: '{{resolve:ssm:/aws/service/ami-windows-latest/Windows_Server-2022-English-Full-Base}}'
      KeyName: !Ref KeyPairName
      SecurityGroupIds:
        - !Ref WindowsBastionSecurityGroup
      SubnetId: !Ref PublicSubnet1Id
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeSize: 80
            VolumeType: gp2
      Tags:
        - Key: Name
          Value: VMwareWindowsBastionInstance-Test
        - Key: Description
          Value: >-
            Windows bastion instance for accessing the
            VMware Tanzu Application Platform cluster graphical user interface
            (GUI).
      UserData:
        Fn::Base64: !Sub |
          <powershell>
          Write-Host -Object 'Setting AWS Region environment variables...'
          [System.Environment]::SetEnvironmentVariable('AWS_REGION','${AWS::Region}',[System.EnvironmentVariableTarget]::System)
          [System.Environment]::SetEnvironmentVariable('AWS_DEFAULT_REGION','${AWS::Region}',[System.EnvironmentVariableTarget]::System)
          Write-Host -Object 'Installing Chocolatey...'
          Set-ExecutionPolicy Bypass -Scope Process -Force
          [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072
          Invoke-Expression -Command ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
          Write-Host -Object 'Installing Mozilla Firefox...'
          choco install -y Firefox
          </powershell>
  UbuntuBastion:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: m5.large
      ImageId: ami-0a22ed271d3dbf544
      KeyName: !Ref KeyPairName
      Monitoring: true
      SecurityGroupIds:
        - !Ref LinuxBastionSecurityGroup
      SubnetId: !Ref PublicSubnet1Id
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: 50
            VolumeType: gp2
            Encrypted: true
            DeleteOnTermination: true
      Tags:
        - Key: Name
          Value: VMwareLinuxBastionInstance-Test
        - Key: Description
          Value: >-
            VMware Tanzu Application Platform EKS cluster bootstrap instance.
      UserData:
        Fn::Base64: !Sub
          - |
            #!/bin/bash
            set -xe
            user=ubuntu
            arch=$(dpkg --print-architecture)
            uname=$(uname -m)
            tap_dir=/home/$user/tap-setup-scripts
          - ClusterArch: single
Outputs:
  WindowsBastionId:
    Description: The instance ID of the Windows bastion instance.
    Value: !Ref WindowsBastion
  UbuntuBastionId:
    Description: The instance ID of the Ubuntu bastion instance.
    Value: !Ref UbuntuBastion